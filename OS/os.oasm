.text
NOP
; stack
MOV $RA, 0x41
PUSH $RA
POP $RD
OUT
; conditionals
MOV $RA, 1
TEST $RA, 2
JST 0, 9
; if AX == 0
OUT 0, 89
JMP $RA, 10
; else
OUT 0, 78
; finally
OUT 0, 10

; addition
OUT 0, 0x34
OUT 0, 43
OUT 0, 0x35
OUT 0, 61
MOV $RD, 0x34
ADD $RD, 0x5
OUT
OUT 0, 10

; subtraction
OUT 0, 0x35
OUT 0, 45
OUT 0, 0x34
OUT 0, 61
MOV $RD, 0x35
SUB $RD, 0x4
OUT
OUT 0, 10

; multiplication
OUT 0, 0x35
OUT 0, 42
OUT 0, 0x34
OUT 0, 61
MOV $RD, 0x4
MUL $RD, 0x2
ADD $RD, 0x30
OUT
OUT 0, 10

OUT 0, 0x38
OUT 0, 47
OUT 0, 0x34
OUT 0, 61
MOV $RD, 0x8
DIV $RD, 0x4
ADD $RD, 0x30
OUT
OUT 0, 10

OUT 0, 0x39
OUT 0, 37
OUT 0, 0x34
OUT 0, 61
MOV $RD, 0x9
MOD $RD, 0x4
ADD $RD, 0x30
OUT
OUT 0, 10

OUT 0, 0x31
OUT 0, 62
OUT 0, 62
OUT 0, 0x33
OUT 0, 61
MOV $RD, 0x1
SHL $RD, 0x3
ADD $RD, 0x30
OUT
OUT 0, 10

OUT 0, 0x38
OUT 0, 60
OUT 0, 60
OUT 0, 0x33
OUT 0, 61
MOV $RD, 0x8
SHR $RD, 0x3
ADD $RD, 0x30
OUT
OUT 0, 10

OUT 0, 0x35
OUT 0, 94
OUT 0, 0x37
OUT 0, 61
MOV $RD, 0x7
XOR $RD, 0x5
ADD $RD, 0x30
OUT
OUT 0, 10

OUT 0, 0x35
OUT 0, 38
OUT 0, 0x33
OUT 0, 61
MOV $RD, 0x5
AND $RD, 0x3
ADD $RD, 0x30
OUT
OUT 0, 10

OUT 0, 0x35
OUT 0, 124
OUT 0, 0x32
OUT 0, 61
MOV $RD, 0x5
OR $RD, 0x2
ADD $RD, 0x30
OUT
OUT 0, 10

CALL 0, 0x71
NOP
NOP
NOP
NOP
NOP
NOP
OUT 0, 0x41
NOP

RST
NOP
OUT 0, 121
OUT 0, 97
OUT 0, 121
RET